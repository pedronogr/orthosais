// Script para instala√ß√£o expl√≠cita do TypeScript e tipagens
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üí™ Iniciando instala√ß√£o expl√≠cita do TypeScript...');

try {
  // Verificar ambiente
  console.log('Ambiente:');
  console.log(`- Node.js: ${process.version}`);
  const npmVersion = execSync('npm --version').toString().trim();
  console.log(`- NPM: ${npmVersion}`);

  // Instalar TypeScript e tipagens como depend√™ncias globais e locais
  console.log('\nüì¶ Instalando TypeScript e tipagens...');
  
  // Tentar instala√ß√£o global (pode falhar em alguns ambientes)
  try {
    console.log('Tentando instala√ß√£o global:');
    execSync('npm install -g typescript@5.0.4', { stdio: 'inherit' });
    console.log('‚úÖ TypeScript instalado globalmente!');
  } catch (err) {
    console.log('‚ö†Ô∏è Instala√ß√£o global falhou, mas isso pode ser ignorado');
  }
  
  // Instala√ß√£o local como depend√™ncia de desenvolvimento
  console.log('\nInstalando depend√™ncias no projeto:');
  execSync('npm install --save-dev typescript@5.0.4 @types/react@18.0.38 @types/react-dom@18.0.11', { stdio: 'inherit' });
  
  // Verificar instala√ß√£o
  console.log('\nüîç Verificando instala√ß√£o:');
  
  const nodeModulesPath = path.join(process.cwd(), 'node_modules');
  const typescriptPath = path.join(nodeModulesPath, 'typescript');
  const reactTypesPath = path.join(nodeModulesPath, '@types', 'react');
  const reactDomTypesPath = path.join(nodeModulesPath, '@types', 'react-dom');
  
  if (fs.existsSync(typescriptPath)) {
    console.log('‚úÖ TypeScript instalado em node_modules!');
  } else {
    console.log('‚ùå TypeScript N√ÉO encontrado em node_modules!');
  }
  
  if (fs.existsSync(reactTypesPath)) {
    console.log('‚úÖ @types/react instalado em node_modules!');
  } else {
    console.log('‚ùå @types/react N√ÉO encontrado em node_modules!');
  }
  
  if (fs.existsSync(reactDomTypesPath)) {
    console.log('‚úÖ @types/react-dom instalado em node_modules!');
  } else {
    console.log('‚ùå @types/react-dom N√ÉO encontrado em node_modules!');
  }

  // Listar vers√µes
  try {
    const tscVersion = execSync('npx tsc --version').toString().trim();
    console.log(`\nVers√£o do TypeScript: ${tscVersion}`);
  } catch (err) {
    console.log('\n‚ö†Ô∏è N√£o foi poss√≠vel verificar a vers√£o do TypeScript');
  }
  
  console.log('\n‚úÖ Script de instala√ß√£o conclu√≠do!');
} catch (error) {
  console.error('‚ùå Erro durante a instala√ß√£o:', error);
} 